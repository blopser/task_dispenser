name: Build & publish containers
on:
  push:
    branches: [ "main" ]
    tags: [ "v*.*.*" ]

  release:
    types: [published]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  REPO_NAME: blopser
  image: ghcr.io/blopser/task_dispenser

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        include:
          - tags: 3.12-alpine 3-alpine alpine
            build_args: |
              BASE_IMAGE=3.12.5-alpine3.20
            is_latest: true

    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set tag
        run: echo "GIT_TAG=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV

      - name: Check changes
        # run: 'if [ -z $(git diff --name-only ${{ github.event.before }} ${{ github.event.after }} "${{ matrix.context }}/VERSION.txt") ]; then echo "IS_CHANGED=false" >> "$GITHUB_ENV" ; else echo "IS_CHANGED=true" >> "$GITHUB_ENV" ; fi'
        run: echo "IS_CHANGED=true" >> "$GITHUB_ENV"

      - name: ls
        # run: 'if [ -z $(git diff --name-only ${{ github.event.before }} ${{ github.event.after }} "${{ matrix.context }}/VERSION.txt") ]; then echo "IS_CHANGED=false" >> "$GITHUB_ENV" ; else echo "IS_CHANGED=true" >> "$GITHUB_ENV" ; fi'
        run: ls -lah .

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into registry "${{ env.REGISTRY }}"
        if: github.event_name != 'pull_request' && env.IS_CHANGED == 'true'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set version
        id: getversion
        run: |
          {
            echo 'tags<<EOF'
            for tag in ${{ matrix.tags }}; do
              echo "${{ env.image }}:$tag-${{ env.GIT_TAG }}" ; done
            if [ "${{ matrix.is_latest }}" = "true" ] ; then
              for tag in ${{ matrix.tags }}; do
                echo "${{ env.image }}:$tag" ; done
              echo "${{ env.image }}:${{ env.GIT_TAG }}"
              echo "${{ env.image }}:latest" ; fi
            echo EOF
          } >> "$GITHUB_ENV"
          echo $GITHUB_ENV
        if: env.IS_CHANGED == 'true'

      # - name: Print version
      # id: printversion
      # run: echo "${{ env.IS_CHANGED }}"

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./Dockerfile
          push: false # ${{ github.event_name != 'pull_request' }}
          tags: ${{ env.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
        if: env.IS_CHANGED == 'true'
